(()=>{"use strict";const t={view:null,model:null,index(){return()=>{this.view.index()}}},e={appElem:null,template:"",set pageTitle(t){document.title=t},sanitize(t){const e=document.createElement("div");return e.textContent=t,e.innerHTML},mount(t){this.appElem=document.querySelector(t)},index(){this.renderTemplate()},renderTemplate(){this.appElem.innerHTML=this.template}};e.mount("#app");const n=e,o=Object.create(n);o.index=function(){this.pageTitle="About",this.template="<h1>About</h1>",this.renderTemplate()};const i=o,d=Object.create(t);d.view=i;const s=d,a=Object.create(n);a.index=function(){this.template="<h1>Home</h1>",this.pageTitle="Home",this.renderTemplate()};const r=a,c=Object.create(t);c.view=r;const l=c,h=Object.create(n);h.bindFormSubmit=function(t){this.appElem.addEventListener("submit",(e=>{e.preventDefault(),t(e)}))},h.bindOnClick=function(t){this.appElem.addEventListener("click",(e=>{t(e)}))},h.renderTodo=function(t){this.pageTitle=`${t.text} -- Todo`,this.template=`<h2>Single Todo -- ${this.sanitize(t.text)}</h2>`,this.renderTemplate()},h.renderTodos=function(t){this.pageTitle="Todos List",this.template=`\n  <h1>Todos</h1>\n  <form class="todos" id="add-todo-form">\n    <input name="todoText" type="text" class="add-todo" />\n    <input type="submit" />\n  </form>\n  <ul>\n    ${t.map((t=>`<li><a data-link href="/todos/${t.id}">${this.sanitize(t.text)}</a><button class="btn delete-todo" data-id="${t.id}">Delete</button></li>`)).join("")}\n  </ul>\n`,this.renderTemplate()};const m=h,p={todos:[],getTodo(t){return this.todos.find((e=>e.id===t))},addTodo(t){const e={id:this.todos.length+1,text:t},n=[...this.todos,e];this.todos=n},deleteTodo(t){this.todos=this.todos.filter((e=>e.id!==+t))}},u=Object.create(t);u.view=m,u.model=p,u.bindEvents=()=>{u.view.bindFormSubmit((t=>{if(t.target.matches("#add-todo-form")){const e=function(t){const e=new FormData(t);return Object.fromEntries(e.entries())}(t.target);u.model.addTodo(e.todoText),u.view.renderTodos(u.model.todos)}})),u.view.bindOnClick((t=>{t.target.matches(".delete-todo")&&(u.model.deleteTodo(+t.target.dataset.id),u.view.renderTodos(u.model.todos))}))},u.index=()=>()=>{u.view.renderTodos(u.model.todos)},u.show=()=>t=>{const e=u.model.getTodo(+t.id);if(!e)throw new Error("Something went wrong.");u.view.renderTodo(e)},u.bindEvents();const T=u,w=Object.create(n);w.index=function(){this.template="h1>Page Not Found</h1>",this.pageTitle="Not Found",this.renderTemplate()};const g=w,b=Object.create(t);b.view=g;const f=b,x=Object.create(n);x.index=function(t){this.pageTitle="Something went wrong",this.template=`<h1>Something Went Wrong</h1>\n                  <p>${t}</p>`,this.renderTemplate()};const v=x,E=Object.create(t);E.view=v,E.index=function(t){this.view.index(t)};const O=E,j=[{path:"/",action:l.index()},{path:"/about",action:s.index()},{path:"/todos",action:T.index()},{path:"/todos/:id",action:T.show()},{path:"/404",action:f.index()},{path:"(.*)",action:()=>S("/404")}],$=()=>{const t=window.location.pathname,e=j.find((function(e){const n=new RegExp(`^${e.path.replace(/:\w+/g,"([^/]+)")}$`),o=t.match(n);if(o){const t={},n=e.path.match(/:\w+/g);return n&&n.forEach(((e,n)=>{const i=e.substring(1);t[i]=o[n+1]})),e.params=t,!0}return!1}));if(e)try{e.action(e.params)}catch(t){O.index(t.message)}},S=t=>{window.history.pushState(null,null,t),$()};document.addEventListener("click",(t=>{t.target.matches("[data-link]")&&(t.preventDefault(),S(t.target.href))})),window.addEventListener("popstate",$),$()})();